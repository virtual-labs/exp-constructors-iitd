[{
	"question": "Q1. What is false about constructor?",
	"answers": {
		"a": " Constructors cannot be synchronized in Java",
		"b": " Java does not provide default copy constructor",
		"c": "Constructor can have a return type",
		"d": "“this” and “super” can be used in a constructor"
	},
	"correctAnswer": "c"
}, {
	"question": "Q2. What would be behavior if the constructor has a return type?",
	"answers": {
		"a": "Compilation error",
		"b": "Runtime error",
		"c": "Compilation and runs successfully",
		"d": "Only String return type is allowed"
	},
	"correctAnswer": "a"
}, {
	"question": "Q3. What is default accessibility modifier of a default constructor?",
	"answers": {
		"a": " Public",
		"b": "private",
		"c": "Same as class accessibility modifier",
		"d": "default"
	},
	"correctAnswer": "c"
}, {
	"question": "Q4. We can declare constructor as private?",
	"answers": {
		"a": "Yes",
		"b": "No"
	},
	"correctAnswer": "a"
}, {
	"question": "Q5. Which of the following is/are true about constructors in Java? A) Constructor name should be same as class name. B) If you dont define a constructor for a class, a default parameter less constructor is automatically created by the compiler. C) The default constructor calls super() and initializes all instance variables to default value like 0, null. D) If we want to parent class constructor, it must be called in first line of constructor.",
	"answers": {
		"a": "1",
		"b": "1, 2",
		"c": "1, 2 and 3",
		"d": " 1, 2, 3 and 4"
	},
	"correctAnswer": "b"
}]
